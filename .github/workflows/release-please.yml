# This workflow causes release-please to maintain a Release PR
# which publishes to NPM once it has been merged.
# See https://github.com/google-github-actions/release-please-action

on:
  push:
    branches:
      - main

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
      # The logic below handles the npm publication:
      - uses: actions/checkout@v4
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      - run: npm run build
        if: ${{ steps.release.outputs.release_created }}
      # - run: npm publish --access=public
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      #   if: ${{ steps.release.outputs.release_created }}

      # Publish Docker image:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ steps.release.outputs.release_created }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          pull: true
          push: true
          tags: domiadev/satisfactory-savegame-prometheus-exporter:v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }},domiadev/satisfactory-savegame-prometheus-exporter:latest
        if: ${{ steps.release.outputs.release_created }}

